library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
p
## LOO USADA 09092025----
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3.8,3.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- 0
y_text_marlenildo <- -0.3
y_text_solucoes  <- -1.2
# Ajuste da largura: limites x para igualar curva com texto
largura_texto <- 5   # ajuste até ficar igual visualmente
x_min <- -largura_texto/2
x_max <-  largura_texto/2
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_cartesian(xlim = c(x_min, x_max),
ylim = c(y_text_solucoes, max(y_left, y_right))) +
theme_minimal() +
theme(panel.background = element_blank(),
plot.background  = element_blank())
p
## LOO USADA 09092025----
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
#18 TRANSPARENTE NOME EMBAIXO----
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas
y_left  <- dnorm(x, mean = -1, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  1, sd = 0.6) * 2.8
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Aumentando o size proporcionalmente
size_marlenildo <- 20   # antes era 8.5
size_solucoes  <- 25    # antes era 10
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "asimovian") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "asimovian") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
## LOO USADA 09092025----
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3.8,3.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- 0
y_text_marlenildo <- -0.3
y_text_solucoes  <- -1.2
# Ajuste da largura: limites x para igualar curva com texto
largura_texto <- 5   # ajuste até ficar igual visualmente
x_min <- -largura_texto/2
x_max <-  largura_texto/2
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_cartesian(xlim = c(x_min, x_max),
ylim = c(y_text_solucoes, max(y_left, y_right))) +
theme_minimal() +
theme(panel.background = element_blank(),
plot.background  = element_blank())
p
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas
y_left  <- dnorm(x, mean = -1, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  1, sd = 0.6) * 2.8
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Aumentando o size proporcionalmente
size_marlenildo <- 20   # antes era 8.5
size_solucoes  <- 25    # antes era 10
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "asimovian") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "asimovian") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha = 0.6) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha = 0.6)
p
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha = 0.6)+
theme_void()
p
# Salvar PNG
ggsave("logo_baixo_cor_transp_semnome.png", plot = p, width = 12, height = 6, dpi = 300, bg = "transparent")
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "white", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "white", alpha = 0.6)+
theme_void()
p
# Salvar PNG
ggsave("logo_branco_cor_transp_semnome.png", plot = p, width = 12, height = 6, dpi = 300, bg = "transparent")
# Salvar PNG
ggsave("logo_branco_cor_transp_semnome.png", plot = p, width = 12, height = 65 dpi = 300, bg = "transparent")
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "white", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "white", alpha = 0.6)+
theme_void()
# Salvar PNG
ggsave("logo_branco_cor_transp_semnome.png", plot = p, width = 12, height = 5, dpi = 300, bg = "transparent")
aulas_ministradas <- read_excel("banco_dados/aulas_ministradas.xlsx",
sheet = "Plan1")
# Carregar pacotes necessários
library(readxl)
library(dplyr)
library(lubridate)
library(lubridate)
library(hms)
library(stringr)
aulas_ministradas <- read_excel("banco_dados/aulas_ministradas.xlsx",
sheet = "Plan1")
#| echo: false
# Mostrar tabela formatada
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
) |>
kable(caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.") |>
kable_paper(html_font = "Arial")
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de início da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`, 2)
) |>
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_styling(
full_width = FALSE,
position = "center",
font_size = 14
)
library(kableExtra)
library(lubridate)
library(hms)
library(stringr)
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de início da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`, 2)
) |>
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_styling(
full_width = FALSE,
position = "center",
font_size = 14
)
#| echo: false
# Mostrar tabela formatada
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
) |>
kable(caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.") |>
kable_paper(html_font = "Arial")
aulas_ministradas
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de início da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`, 2)
)
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
) |>
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_styling(
full_width = FALSE,
position = "center",
font_size = 14
)
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
)
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_paper(
full_width = FALSE,
position = "center",
font_size = 14
)
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_paper(
)
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
) |>
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_paper(
full_width = FALSE,
position = "center",
font_size = 14
)
#| echo: false
# Mostrar tabela estilizada no estilo do site
aulas_ministradas |>
mutate(
Data = format(Data, "%d/%b/%Y", locale = "pt_BR.UTF-8"),
`Horário de nício da aula` = format(`Horário de nício da aula`, "%H:%M"),
`Horário de fim da aula`    = format(`Horário de fim da aula`, "%H:%M"),
`Número de horas` = round(`Número de horas`,2)
) |>
kable(
caption = "Aulas ministradas no Curso de Estatística com R para Experimentação Agrícola.",
format = "html",
table.attr = "class='styled-table'"
) |>
kable_styling(
full_width = TRUE,
position = "center",
font_size = 14
)
