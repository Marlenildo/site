x <- seq(-3.8,3.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- 0
y_text_marlenildo <- -0.3
y_text_solucoes  <- -1.2
# Ajuste da largura: limites x para igualar curva com texto
largura_texto <- 5   # ajuste até ficar igual visualmente
x_min <- -largura_texto/2
x_max <-  largura_texto/2
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_cartesian(xlim = c(x_min, x_max),
ylim = c(y_text_solucoes, max(y_left, y_right))) +
theme_void()
p
color = "#6dd47e, size = 17, fontface = "bold",
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
#btanco trabnsparente
p3 <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47e", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p3
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3.8,3.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- 0
y_text_marlenildo <- -0.3
y_text_solucoes  <- -1.2
# Ajuste da largura: limites x para igualar curva com texto
largura_texto <- 5   # ajuste até ficar igual visualmente
x_min <- -largura_texto/2
x_max <-  largura_texto/2
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47E", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_cartesian(xlim = c(x_min, x_max),
ylim = c(y_text_solucoes, max(y_left, y_right))) +
theme_void()
p
library(ggplot2)
library(showtext)
library(gganimate)
library(dplyr)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Criar coluna de frame (0 a 1) para animação
df_left  <- df_left  %>% mutate(frame = seq(0, 1, length.out = n()))
df_right <- df_right %>% mutate(frame = seq(0, 1, length.out = n()))
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Gráfico animado
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y * frame), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y * frame), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void()+
transition_states(frame, transition_length = 2, state_length = 1, wrap = FALSE)
p
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Gráfico animado com curvas crescendo
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "asimovian") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "asimovian") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_reveal(x)  # animação da curva crescendo
p
ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "asimovian") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "asimovian") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void()
# Gráfico animado com curvas crescendo
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "asimovian") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "asimovian") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
transition_reveal(x)  # animação da curva crescendo
p
# Renderizar animação
animate(p, nframes = 100, fps = 20, width = 800, height = 600, renderer = gifski_renderer("logo_animado.gif"))
# Renderizar animação
animate(p, nframes = 100, fps = 20, width = 800, height = 600, renderer = gifski_renderer("logo_animado.gif"))
# Gráfico animado com curvas crescendo
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
transition_reveal(x)  # animação da curva crescendo
ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5) +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5) +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void()
##
library(ggplot2)
library(showtext)
library(gganimate)
library(dplyr)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 2.8
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Gráfico animado com curvas crescendo
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5, stat = "identity") +
geom_area(data = df_right, aes(x = x, y = y), fill = "green", alpha=0.5, stat = "identity") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "green", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_reveal(x)  # animação da curva crescendo
# Renderizar animação
animate(p, nframes = 100, fps = 20, width = 800, height = 600,
renderer = gifski_renderer("logo_animado.gif"))
# Gráfico animado com curvas crescendo
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5, stat = "identity") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha=0.5, stat = "identity") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47e", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_reveal(x)  # animação da curva crescendo
# Renderizar animação
animate(p, nframes = 100, fps = 20, width = 800, height = 600,
renderer = gifski_renderer("logo_animado.gif"))
# Animação 2----
library(ggplot2)
library(showtext)
library(gganimate)
library(dplyr)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas finais
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
# Criar frames para animação
nframes <- 100
df_left <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_left, nframes)
)
df_left <- df_left %>%
mutate(y = y_final * (frame / nframes))  # vai crescendo de 0 até y_final
df_right <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_right, nframes)
)
df_right <- df_right %>%
mutate(y = y_final * (frame / nframes))  # vai crescendo de 0 até y_final
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.6
y_text_solucoes  <- -1.2
# Gráfico animado
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5, stat="identity") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha=0.5, stat="identity") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 15, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47e", size = 10, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 0.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_time(frame)  # animação seguindo os frames
animate(p, nframes = 100, fps = 20, width = 800, height = 600, renderer = gifski_renderer("logo_animado.gif"))
#ANimação 3----
library(ggplot2)
library(showtext)
library(gganimate)
library(dplyr)
library(tidyr)
library(stringr)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas finais
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
# Frames de animação
nframes <- 100
# Curvas animadas
df_left <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_left, nframes)
) %>%
mutate(y = y_final * (frame / nframes))
df_right <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_right, nframes)
) %>%
mutate(y = y_final * (frame / nframes))
# Função para criar letras animadas caindo
animate_text <- function(text, y_final, x_center, nframes, spacing = 0.6) {
letters <- str_split(text, "")[[1]]
n_letters <- length(letters)
x_pos <- seq(x_center - spacing*(n_letters-1)/2, x_center + spacing*(n_letters-1)/2, length.out = n_letters)
df <- expand.grid(letter = letters,
x = x_pos,
frame = 1:nframes) %>%
group_by(letter, x) %>%
mutate(y = y_final + (max(y_final, 1.5) - y_final) * (1 - frame/nframes)) %>%
ungroup()
return(df)
}
# Letras animadas dos textos
df_text1 <- animate_text("MARLENILDO", y_final = -0.6, x_center = 0, nframes = nframes)
df_text2 <- animate_text("Soluções em Curso", y_final = -1.2, x_center = 0, nframes = nframes, spacing = 0.5)
# Gráfico animado
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5, stat="identity") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha=0.5, stat="identity") +
geom_text(data = df_text1, aes(x = x, y = y, label = letter), color = "#1f4e85",
size = 15, fontface = "bold", family = "audiowide") +
geom_text(data = df_text2, aes(x = x, y = y, label = letter), color = "#6dd47e",
size = 10, fontface = "bold", family = "audiowide") +
coord_equal(ylim = c(-2.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_time(frame)
# Renderizar animação
animate(p, nframes = nframes, fps = 20, width = 800, height = 600,
renderer = gifski_renderer("logo_animado_moderno.gif"))
## LOO USADA 09092025----
library(ggplot2)
library(dplyr)
library(showtext)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-2.8,2.8, length.out = 500)
# Curvas mais próximas
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
df_left  <- data.frame(x = x, y = y_left)
df_right <- data.frame(x = x, y = y_right)
# Coordenadas do texto
x_center <- mean(range(x))
y_text_marlenildo <- -0.4
y_text_solucoes  <- -1
# Cor transparaente
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "white", alpha = 0.6) +
geom_area(data = df_right, aes(x = x, y = y), fill = "white", alpha = 0.6)+
theme_void()
p
#btanco trabnsparente
p_cor <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e") +
annotate("text", x = x_center, y = y_text_marlenildo, label = "MARLENILDO",
color = "#1f4e85", size = 23, fontface = "bold",
hjust = 0.5, family = "audiowide") +
annotate("text", x = x_center, y = y_text_solucoes, label = "Soluções em Curso",
color = "#6dd47e", size = 17, fontface = "bold",
hjust = 0.5, family = "audiowide") +
coord_equal(ylim = c(y_text_solucoes - 1.2, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA))
p_cor
p_cor
library(ggplot2)
library(showtext)
library(gganimate)
library(dplyr)
library(tidyr)
library(stringr)
# Ativar showtext
font_add_google("Audiowide", "audiowide")
showtext_auto()
# Sequência de x
x <- seq(-3, 3, length.out = 500)
# Curvas finais
y_left  <- dnorm(x, mean = -0.8, sd = 0.6) * 3.5
y_right <- dnorm(x, mean =  0.8, sd = 0.6) * 3.5
# Frames de animação
nframes <- 100
# Curvas animadas
df_left <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_left, nframes)
) %>%
mutate(y = y_final * (frame / nframes))
df_right <- data.frame(
x = rep(x, nframes),
frame = rep(1:nframes, each = length(x)),
y_final = rep(y_right, nframes)
) %>%
mutate(y = y_final * (frame / nframes))
# Função para animar letras sequenciais caindo próximo da posição final
animate_text_seq <- function(text, y_final, x_center, nframes, spacing = 0.6, delay = 5) {
letters <- str_split(text, "")[[1]]
n_letters <- length(letters)
x_pos <- seq(x_center - spacing*(n_letters-1)/2, x_center + spacing*(n_letters-1)/2, length.out = n_letters)
df <- expand.grid(letter = letters,
x = x_pos,
frame = 1:nframes) %>%
group_by(letter, x) %>%
mutate(
# Cada letra inicia a animação com delay proporcional à sua posição
start_frame = (seq_len(n()) %% n_letters) * delay,
frame_adj = pmax(frame - start_frame, 0),
y = y_final + 0.5 * exp(-0.05 * frame_adj)  # começa levemente acima e cai suavemente
) %>%
ungroup()
return(df)
}
# Letras animadas dos textos
df_text1 <- animate_text_seq("MARLENILDO", y_final = -0.6, x_center = 0, nframes = nframes, spacing = 0.6, delay = 5)
df_text2 <- animate_text_seq("Soluções em Curso", y_final = -1.2, x_center = 0, nframes = nframes, spacing = 0.5, delay = 5)
# Gráfico animado
p <- ggplot() +
geom_area(data = df_left, aes(x = x, y = y), fill = "#1f4e85", alpha=0.5, stat="identity") +
geom_area(data = df_right, aes(x = x, y = y), fill = "#6dd47e", alpha=0.5, stat="identity") +
geom_text(data = df_text1, aes(x = x, y = y, label = letter), color = "#1f4e85",
size = 15, fontface = "bold", family = "Audiowide") +
geom_text(data = df_text2, aes(x = x, y = y, label = letter), color = "#6dd47e",
size = 10, fontface = "bold", family = "Audiowide") +
coord_equal(ylim = c(-2.5, max(y_left, y_right) + 0.5)) +
theme_void() +
theme(panel.background = element_rect(fill = NA, color = NA),
plot.background  = element_rect(fill = NA, color = NA)) +
transition_time(frame)
# Renderizar animação
animate(p, nframes = nframes, fps = 20, width = 800, height = 600,
renderer = gifski_renderer("logo_animado_letras_sequenciais.gif"))
setwd("C:/Users/marle/OneDrive/Documentos/Projetos R/site/logo_script")
setwd("C:\\Users\\dseng\\OneDrive\\Projetos R\\EXCLUIR")
getwd() # Verifica o diretório de trabalho atual
setwd("C:/Users/marle/OneDrive/Documentos/Projetos R/site")
### 3.3.1 Importando dados de um arquivo Excel usando pacote readxl----
dados_ruins_dic <- read_excel("C:\\Users\\marle\\OneDrive\\Documentos\\Projetos R\\site\\banco_dados\\dados_ruins_dic.xlsx", sheet = "Planilha1")
#' Pacotes para manipulação e leitura de dados
library(tidyverse)   # Inclui dplyr, ggplot2, readr, tidyr, etc.
library(dplyr)       # Manipulação de dados
library(readxl)      # Para importar planilhas Excel
library(readr)       # Para importar arquivos de texto
#' Pacotes para análise de experimentos
library(ExpDes.pt)   # ANOVA para DIC, DBC, parcelas subdivididas etc.
library(easyanova)   # ANOVA e testes complementares de forma simplificada
#' Pacotes para estatística e pós-testes
library(rstatix)     # Testes estatísticos (normalidade, homogeneidade, etc.)
library(emmeans)     # Médias ajustadas e comparações múltiplas
#' Pacotes para organização e visualização de dados
library(janitor)     # Limpeza e organização de dados
library(kableExtra)  # Tabelas formatadas
### 3.3.1 Importando dados de um arquivo Excel usando pacote readxl----
dados_ruins_dic <- read_excel("C:\\Users\\marle\\OneDrive\\Documentos\\Projetos R\\site\\banco_dados\\dados_ruins_dic.xlsx", sheet = "Planilha1")
### 3.3.2 Importando dados de um arquivo .txt (arquivo de texo bloco de notas) usando pacote readr----
dados_ruins_dic <- read_delim("C:\\Users\\marle\\OneDrive\\Documentos\\Projetos R\\site\\banco_dados\\dados_ruins_dic.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
dados_ruins_dic # Visualização rápida no console
